-- Generated by Oracle SQL Developer Data Modeler 20.2.0.167.1538
--   at:        2023-12-15 15:52:58 EET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE furnizor (
    id_furnizor  NUMBER(4) NOT NULL,
    denumire     VARCHAR2(25 CHAR) NOT NULL,
    adresa       VARCHAR2(30 CHAR)
);

ALTER TABLE furnizor
    ADD CONSTRAINT furnizor_denumire_ck CHECK ( length(denumire) > 1 );

ALTER TABLE furnizor ADD CONSTRAINT furnizor_pk PRIMARY KEY ( id_furnizor );

ALTER TABLE furnizor ADD CONSTRAINT furnizor_denumire_uk UNIQUE ( denumire );

CREATE TABLE incasari (
    id_incasari      NUMBER(10) NOT NULL,
    metoda_de_plata  VARCHAR2(4 CHAR) NOT NULL,
    data_vanzare     DATE NOT NULL,
    suma             NUMBER(4) NOT NULL,
    id_vinil         NUMBER(4) NOT NULL
);

ALTER TABLE incasari
    ADD CONSTRAINT incasari_metoda_de_plata_ck CHECK ( metoda_de_plata IN ( 'card', 'cash' ) );

ALTER TABLE incasari ADD CONSTRAINT incasari_suma_ck CHECK ( suma > 0 );



ALTER TABLE incasari ADD CONSTRAINT incasari_pk PRIMARY KEY ( id_incasari );

CREATE TABLE pozitonare (
    biblioteca  NUMBER(2) NOT NULL,
    raft        NUMBER(2) NOT NULL,
    id_vinil    NUMBER(4) NOT NULL
);

ALTER TABLE pozitonare ADD CONSTRAINT pozitionare_biblioteca_ck CHECK ( biblioteca > 0 );

ALTER TABLE pozitonare
    ADD CONSTRAINT pozitionare_raft CHECK ( raft > 0
                                            OR raft BETWEEN 1 AND 15 );

CREATE UNIQUE INDEX pozitonare__idx ON
    pozitonare (
        id_vinil
    ASC );

ALTER TABLE pozitonare ADD CONSTRAINT pozitionare_biblioteca_raft_uk UNIQUE ( biblioteca,
                                                                              raft );

CREATE TABLE promotie (
    id_promotie  NUMBER(4) NOT NULL,
    data_inc     DATE NOT NULL,
    data_sf      DATE NOT NULL,
    procent      NUMBER(2) NOT NULL
);

ALTER TABLE promotie
    ADD CONSTRAINT promotie_data_sf_ck CHECK ( data_sf - data_inc > 7 );

ALTER TABLE promotie
    ADD CONSTRAINT promotie_procent_ck CHECK ( procent > 0
                                               AND procent < 100 );

ALTER TABLE promotie ADD CONSTRAINT promotie_pk PRIMARY KEY ( id_promotie );

CREATE TABLE vinil_fizic (
    id_vinil         NUMBER(4) NOT NULL,
    stare            VARCHAR2(12 CHAR) NOT NULL,
    pret             NUMBER(4) NOT NULL,
    stoc             NUMBER(3) NOT NULL,
    id_vinilgeneric  NUMBER(4) NOT NULL,
    id_furnizor      NUMBER(4) NOT NULL,
    id_promotie      NUMBER(4) NOT NULL
);

ALTER TABLE vinil_fizic
    ADD CONSTRAINT vinil_fizic_stare_ck CHECK ( stare IN ( 'buna', 'foarte buna', 'noua' ) );

ALTER TABLE vinil_fizic ADD CONSTRAINT vinil_fizic_pret_ck CHECK ( pret > 0 );

ALTER TABLE vinil_fizic ADD CONSTRAINT vinil_fizic_stoc_ck CHECK ( stoc >= 0 );


ALTER TABLE vinil_fizic ADD CONSTRAINT vinil_fizic_pk PRIMARY KEY ( id_vinil );

CREATE TABLE vinil_generic (
    id_vinilgeneric  NUMBER(4) NOT NULL,
    titlu_album      VARCHAR2(30 CHAR) NOT NULL,
    artist           VARCHAR2(30 CHAR) NOT NULL,
    gen_muzical      VARCHAR2(20 CHAR) NOT NULL,
    an_lansare       NUMBER(4)
);

ALTER TABLE vinil_generic
    ADD CONSTRAINT vinil_generic_titlu_album_ck CHECK ( length(titlu_album) > 0 );

ALTER TABLE vinil_generic
    ADD CONSTRAINT vinil_generic_artist_ck CHECK ( length(artist) > 1 );

ALTER TABLE vinil_generic
    ADD CONSTRAINT vinil_generic_gen_muzical_ck CHECK ( length(gen_muzical) > 1 );

ALTER TABLE vinil_generic ADD CONSTRAINT vinil_generic_pk PRIMARY KEY ( id_vinilgeneric );

ALTER TABLE vinil_fizic
    ADD CONSTRAINT furnizor_vinil_fizic_fk FOREIGN KEY ( id_furnizor )
        REFERENCES furnizor ( id_furnizor );

ALTER TABLE vinil_fizic
    ADD CONSTRAINT promotie_vinil_fizic_fk FOREIGN KEY ( id_promotie )
        REFERENCES promotie ( id_promotie );

ALTER TABLE incasari
    ADD CONSTRAINT vinil_fizic_incasari_fk FOREIGN KEY ( id_vinil )
        REFERENCES vinil_fizic ( id_vinil );

ALTER TABLE pozitonare
    ADD CONSTRAINT vinil_fizic_pozitionare_fk FOREIGN KEY ( id_vinil )
        REFERENCES vinil_fizic ( id_vinil );

ALTER TABLE vinil_fizic
    ADD CONSTRAINT vinil_generic_vinil_fizic_fk FOREIGN KEY ( id_vinilgeneric )
        REFERENCES vinil_generic ( id_vinilgeneric );

CREATE SEQUENCE furnizor_id_furnizor_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER furnizor_id_furnizor_trg BEFORE
    INSERT ON furnizor
    FOR EACH ROW
    WHEN ( new.id_furnizor IS NULL )
BEGIN
    :new.id_furnizor := furnizor_id_furnizor_seq.nextval;
END;
/

CREATE SEQUENCE incasari_id_incasari_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER incasari_id_incasari_trg BEFORE
    INSERT ON incasari
    FOR EACH ROW
    WHEN ( new.id_incasari IS NULL )
BEGIN
    :new.id_incasari := incasari_id_incasari_seq.nextval;
END;
/

CREATE SEQUENCE promotie_id_promotie_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER promotie_id_promotie_trg BEFORE
    INSERT ON promotie
    FOR EACH ROW
    WHEN ( new.id_promotie IS NULL )
BEGIN
    :new.id_promotie := promotie_id_promotie_seq.nextval;
END;
/

CREATE SEQUENCE vf_id_vinil_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER vf_id_vinil_trg BEFORE
    INSERT ON vinil_fizic
    FOR EACH ROW
    WHEN ( new.id_vinil IS NULL )
BEGIN
    :new.id_vinil := vf_id_vinil_seq.nextval;
END;
/

CREATE SEQUENCE vg_id_vinilgeneric_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER vg_id_vinilgeneric_trg BEFORE
    INSERT ON vinil_generic
    FOR EACH ROW
    WHEN ( new.id_vinilgeneric IS NULL )
BEGIN
    :new.id_vinilgeneric := vg_id_vinilgeneric_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             6
-- CREATE INDEX                             3
-- ALTER TABLE                             25
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           5
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          5
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
